<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.tuhu.mapper.OKRMapper">
    <select id="getOKRNames" resultType="java.lang.String">
        SELECT name from tuhu_okr group by name;
    </select>
    <select id="getOKR" resultType="io.metersphere.tuhu.dto.TuhuOKRDTO">
        SELECT id, name, description, create_time createTime, update_time updateTime, workspace_id wsId, api_total okrApiTotal, api_p0 okrApiP0, api_test_total okrApiTestTotal, api_test_p0 okrApiTestP0, scenario_test_total okrScenarioTestTotal from tuhu_okr;
    </select>
    <select id="getOKRById" resultType="io.metersphere.tuhu.dto.TuhuOKRDTO">
        SELECT id, name, description, create_time createTime, update_time updateTime, workspace_id wsId, api_total okrApiTotal, api_p0 okrApiP0, api_test_total okrApiTestTotal, api_test_p0 okrApiTestP0, scenario_test_total okrScenarioTestTotal from tuhu_okr
        where id = #{id};
    </select>
    <select id="getOKRByName" resultType="io.metersphere.tuhu.dto.TuhuOKRDTO">
        SELECT id, name, description, create_time createTime, update_time updateTime, workspace_id wsId, api_total okrApiTotal, api_p0 okrApiP0, api_test_total okrApiTestTotal, api_test_p0 okrApiTestP0, scenario_test_total okrScenarioTestTotal from tuhu_okr
        where name = #{okrName};
    </select>
    <select id="getOKRByNameAndWSId" resultType="io.metersphere.tuhu.dto.TuhuOKRDTO">
        SELECT id, name, description, create_time createTime, update_time updateTime, workspace_id wsId, api_total okrApiTotal, api_p0 okrApiP0, api_test_total okrApiTestTotal, api_test_p0 okrApiTestP0, scenario_test_total okrScenarioTestTotal from tuhu_okr
        where name = #{okrName} and wsId = #{wsId};
    </select>
    <insert id="insert" parameterType="io.metersphere.tuhu.dto.TuhuOKRDTO">
        insert into tuhu_okr (id, name, description, create_time, update_time, workspace_id, api_total,
        api_p0, api_test_total, api_test_p0, scenario_test_total)
        values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{wsId,jdbcType=VARCHAR},
        #{okrApiTotal,jdbcType=LONGVARCHAR}, #{okrApiP0,jdbcType=LONGVARCHAR}, #{okrApiTestTotal,jdbcType=LONGVARCHAR},
        #{okrApiTestP0,jdbcType=LONGVARCHAR}, #{okrScenarioTestTotal,jdbcType=LONGVARCHAR})
    </insert>
    <update id="update" parameterType="io.metersphere.tuhu.dto.TuhuOKRDTO">
        UPDATE tuhu_okr
        SET description = #{record.id,jdbcType=VARCHAR},
        api_total = #{record.okrApiTotal,jdbcType=LONGVARCHAR},
        api_p0 = #{record.okrApiP0,jdbcType=LONGVARCHAR},
        api_test_total = #{record.okrApiTestTotal,jdbcType=LONGVARCHAR},
        api_test_p0 = #{record.okrApiTestP0,jdbcType=LONGVARCHAR},
        scenario_test_total = #{record.okrScenarioTestTotal,jdbcType=LONGVARCHAR}
        WHERE name = #{record.name,jdbcType=VARCHAR} AND workspace_id = #{record.wsId,jdbcType=VARCHAR}
    </update>
    <select id="getAppIdCoverage" resultType="io.metersphere.tuhu.dto.AppIdCoverageDTO">
        SELECT org1.name dep, org1.id dep_id, ws.name team, ws.id team_id,
                appid_all.all_app_id_num, appid_part.part_app_id_num,
                (appid_part.part_app_id_num/appid_all.all_app_id_num) percent
        FROM organization org1
        LEFT JOIN workspace ws on ws.organization_id = org1.id
        LEFT JOIN (
            SELECT workspace_id team_id, count(distinct app_id) all_app_id_num
            FROM tuhu_all_appid
            GROUP BY workspace_id) appid_all on appid_all.team_id = ws.id
        LEFT JOIN (
            SELECT ws.id team_id, count(distinct aamp.app_id) part_app_id_num
            FROM organization org
            LEFT JOIN workspace ws on ws.organization_id = org.id
            LEFT JOIN project proj on proj.workspace_id = ws.id
            LEFT JOIN api_definition api on api.project_id = proj.id
            LEFT JOIN tuhu_appid_api_mapping aamp on api.path = aamp.url
            WHERE proj.name is not null AND aamp.app_id is not null
                AND proj.name not in ('审核2.0', 'test') AND not proj.name like '%demo%'
                AND org.name not in ('MeterSphere demo test', '平台架构中心', '默认组织')
                GROUP BY ws.id) appid_part on appid_part.team_id = ws.id
        WHERE org1.name not in ('MeterSphere demo test', '平台架构中心', '默认组织')
    </select>
</mapper>